@page "/Course/{ID:guid}"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

<h1 class="mt-4 mb-4">Course Details</h1>

@if (course != null)
{
    <div class="mb-3">
        <a href="Edit/@course.Id" class="btn btn-primary">Edit Course</a>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h4 class="card-title">Course Information</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-3">Name</dt>
                <dd class="col-sm-9">@course.Name</dd>
                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9">@course.Description</dd>
                <dt class="col-sm-3">Fee</dt>
                <dd class="col-sm-9">@course.Fee.ToString("C")</dd>
            </dl>
        </div>
    </div>

    <h2 class="mt-4 mb-3">Enrolled Students</h2>
    @if (Users != null && Users.Any())
    {
        <ul class="list-group shadow-sm mb-4">
            @foreach (IdentityUser user in Users)
            {
                <li class="list-group-item">@user.Email</li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-info">No students enrolled in this course.</div>
    }
}
else
{
    <div class="alert alert-warning">Course not found.</div>
}

@code {
    private Course? course = new Course();
    protected List<IdentityUser> Users { get; set; } = [];

    [Parameter]
    public Guid ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        course = await _context.Courses.FirstOrDefaultAsync(m => m.Id == ID);

        if (course != null)
        {
            List<CourseUser> courseUsers = _context.CourseUsers.Where(key => key.CourseId == ID).ToList();

            Users = courseUsers.Select(key => key.User).ToList();
        }
    }
}
