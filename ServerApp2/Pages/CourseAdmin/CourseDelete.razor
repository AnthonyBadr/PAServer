@page "/Course/Delete/{ID:guid}"

@inject NavigationManager _navigation
@inject ApplicationDbContext _context

<h1 class="mt-4 mb-4">Delete Course</h1>

@if (course != null)
{
    <h3>Are you sure you want to delete this course?</h3>
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h4 class="card-title">Course Details</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-3">Name</dt>
                <dd class="col-sm-9">@course.Name</dd>
                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9">@course.Description</dd>
                <dt class="col-sm-3">Fee</dt>
                <dd class="col-sm-9">@course.Fee.ToString("C")</dd>
            </dl>

            <form method="post" @onsubmit="DeleteCourse">
                <button type="submit" class="btn btn-danger me-2">Delete</button>
                <a href="Index" class="btn btn-secondary">Back to List</a>
            </form>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">Course not found.</div>
}

@code {
    private Course? course = new();

    [Parameter]
    public Guid ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        course = await _context.Courses.FirstOrDefaultAsync(m => m.Id == ID);
    }

    private async Task DeleteCourse()
    {
        if (course != null)
        {
            _context.Courses.Remove(course);
            await _context.SaveChangesAsync();
        }

        _navigation.NavigateTo("Course");
    }
}
