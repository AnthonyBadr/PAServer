@page "/course/manage"
@inject ApplicationDbContext DbContext

<h1 class="mt-4 mb-4">Manage Courses</h1>

<EditForm Model="@course" OnValidSubmit="HandleValidSubmit">
    <div class="form-group mb-3">
        <label for="name" class="form-label">Name:</label>
        <InputText id="name" @bind-Value="course.Name" class="form-control" />
        <ValidationMessage For="@(() => course.Name)" class="text-danger" />
    </div>
    <div class="form-group mb-3">
        <label for="description" class="form-label">Description:</label>
        <InputTextArea id="description" @bind-Value="course.Description" class="form-control" />
        <ValidationMessage For="@(() => course.Description)" class="text-danger" />
    </div>
    <div class="form-group mb-3">
        <label for="price" class="form-label">Price:</label>
        <InputNumber id="price" @bind-Value="course.Fee" class="form-control" />
        <ValidationMessage For="@(() => course.Fee)" class="text-danger" />
    </div>
    <button type="submit" class="btn btn-primary">Create Course</button>
</EditForm>

@if (courses != null && courses.Any())
{
    <h2 class="mt-4 mb-3">List of Courses</h2>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in courses)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No courses found.</p>
}


@code {
    Course course = new Course();
    List<Course> courses;

    protected override async Task OnInitializedAsync()
    {
        courses = await DbContext.Courses.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Courses.Add(course);
        await DbContext.SaveChangesAsync();
        courses = await DbContext.Courses.ToListAsync(); // Refresh the course list after saving
    }
}
