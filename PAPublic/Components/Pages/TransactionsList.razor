@page "/TransactionsUser"
<h3>Transactions</h3>
@using System.Security.Claims
@using PADatabase.Models
@using Microsoft.AspNetCore.Identity
@inject NavigationManager _navigation
@inject ApplicationDbContext _context
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject RoleManager<IdentityRole> _roleManager
@inject UserManager<IdentityUser> UserManager



@if (loading)
{
    <div class="loading-overlay">
        <div class="loading-spinner">
            Loading...
        </div>
    </div>
}
else
{

<div class="table-responsive">
    <table class="table table-striped table-bordered shadow-sm">
        <thead class="table-light">
            <tr>
                <th>Date</th>
                <th>Amount</th>

                <th>Comment</th>
             


            </tr>
        </thead>
        <tbody>
            @foreach (var item in trans)
            {
                <tr>
                    <td>@item.date_T</td>
                    <td>$ @item.amount</td>
                    <td>@item.comment</td>
                  

                </tr>
            }
        </tbody>
    </table>
</div>


}
@code {
    private bool loading;
    List<Transaction> trans = new List<Transaction>();

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        string authid = authState.User.FindFirstValue(ClaimTypes.NameIdentifier);

        trans = await _context.Transactions
                              .Where(x => x.UserId == authid)
                              .ToListAsync();
        loading = false;

    }
}
