@page "/Teacher/MyPayment"
@using System.Security.Claims
@using PADatabase.Models
@using Microsoft.AspNetCore.Identity
@inject NavigationManager _navigation
@inject ApplicationDbContext _context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject RoleManager<IdentityRole> _roleManager
@inject UserManager<IdentityUser> UserManager

<h3>TeacherMyPayment</h3>

@if (ListUser != null && ListUser.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered shadow-sm">
            <thead class="table-light">
                <tr>
                    <th>Payment Number</th>
                    <th>Paymemt</th>
                    <th>Number of Hours</th>
                    <th>Status</th>
                    <th>View Sessions</th>
                 
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListUser)
                {
                    <tr>
                    
                        <td>@item.PaymentNumber</td>
                        <td>@item.Money</td>
                        <td>@item.NbHours</td>
                        <td>@item.Status</td>
                        <td> <a href="/Session/SessionwithPaymentNumber/@item.Id" class="btn btn-primary btn-sm me-2">Sessions</a></td>
                       
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning">No sessions found.</div>
}

@code {
    private List<UserSummaries> ListUser = new List<UserSummaries>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        string authid = authState.User.FindFirstValue(ClaimTypes.NameIdentifier);

        ListUser = _context.UserSummaries.Where(x => x.UserId == authid).ToList();
    }
}
