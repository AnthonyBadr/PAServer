@page "/Student/Mycourses"
@using System.Security.Claims
@inject ApplicationDbContext _context
@inject NavigationManager _navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1 class="mt-4">Available Courses</h1>

<div class="container my-4">
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var item in Course)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <p class="card-text"><strong>Fee:</strong> @item.Fee</p>
                        <a href="/View/Assignment/@item.Id" class="btn btn-primary">View Assignments</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@code {
    private IList<Course> Course = new List<Course>();
    private IList<CourseUser> CourseUser = new List<CourseUser>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        string authid = authState.User.FindFirstValue(ClaimTypes.NameIdentifier);
        CourseUser = _context.CourseUsers.Where(c => c.UserId == authid).ToList();

        RefreshData();
    }

    private void RefreshData()
    {
        @foreach (var item in CourseUser)
        {
            Course? n = _context.Courses.FirstOrDefault(c => c.Id == item.CourseId);

            if (n != null)
                Course.Add(n);


        }
    }

}
